#include <stdio.h>
#define SIZE 7

int main(void)
{
	static const char Base64[] = "abcdefghijklmnopqrstuvwxyzABCDEFZHIJKLMNOPQRSTUVWXYZ0123456789+/";
		
	int i = 0;
	int test_in[SIZE] = {0x04, 0x20, 0xc4, 0xf1, 0x24, 0x11, 0xf1 };
	int in_8bit[16];
	int num_byte;
	

	FILE *fp = NULL;

	/*
	fp = fopen("./c binary.bin", "wb");
	if (fp == NULL)
	{
		fprintf(stderr, "파일을 열 수 없습니다.");
		return 1;
	}

	fwrite(test_in, 1, sizeof(test_in), fp);	
	fclose(fp);
	*/


	fp = fopen("./c binary.bin", "rb");
	if (fp == NULL)
	{
		fprintf(stderr, "파일을 열 수 없습니다.");
		return 1;
	}

		num_byte = fread(in_8bit, sizeof(int), sizeof(in_8bit), fp);
		
		printf("8 bit 데이터 수: %d \n\n", num_byte);

		int j = 0;
		int index;
		int out_6bit[4] = { 0,0,0,0 };		
				
				
		char Encoded_str[256] = "";

		for (i = 0; i < num_byte; i++)
		{
			index = i % 3;
			printf("%d 번째 바이트 값: %d \n", i+1, in_8bit[i]);			

			if (index == 2 )
			{					
				printf("\n");
				out_6bit[0] = in_8bit[i - 2] >> 2;
				out_6bit[1] = ((in_8bit[i - 2] & 0x3) << 4) | ((in_8bit[i - 1]) >> 4);
				out_6bit[2] = ((in_8bit[i - 1] & 0xf) << 2) | ((in_8bit[i]) >> 6);
				out_6bit[3] = (in_8bit[i] & 0x3f);
											
				Encoded_str[j++] = Base64[out_6bit[0]];
				Encoded_str[j++] = Base64[out_6bit[1]];
				Encoded_str[j++] = Base64[out_6bit[2]];
				Encoded_str[j++] = Base64[out_6bit[3]];

				printf("%d ", out_6bit[0]);
				printf("%d ", out_6bit[1]);
				printf("%d ", out_6bit[2]);
				printf("%d ", out_6bit[3]);
				printf("\n\n");				
			}						

			else if (i == (num_byte - 1)) {
				if (index == 0)
				{
					out_6bit[0] = in_8bit[i] >> 2;
					out_6bit[1] = ((in_8bit[i] & 0x3) << 4);

					Encoded_str[j++] = Base64[out_6bit[0]];
					Encoded_str[j++] = Base64[out_6bit[1]];
					Encoded_str[j++] = '=';
					Encoded_str[j++] = '=';

				}
			else if (index == 1)
				{
				out_6bit[0] = in_8bit[i - 1] >> 2;
				out_6bit[1] = ((in_8bit[i - 1] & 0x3) << 4) | ((in_8bit[i]) >> 4);
				out_6bit[2] = ((in_8bit[i] & 0xf) << 2);

				Encoded_str[j++] = Base64[out_6bit[0]];
				Encoded_str[j++] = Base64[out_6bit[1]];
				Encoded_str[j++] = Base64[out_6bit[2]];
				Encoded_str[j++] = '=';
			}
		}

		}
	
		printf("\n");
		int k;
		for (k = 0; k < j; k++)
		{
			printf("%c ", Encoded_str[k]);
		}
	
	
	fclose(fp);
	
	printf("\n\n\n");
	return 0;
}
